name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Backend install & optional tests
      - name: Install backend dependencies
        run: |
          if [ -d "server" ]; then
            cd server
            npm install
            # run tests if available
            if [ -f "package.json" ]; then
              npm test || echo "No tests found"
            fi
          fi

      # Frontend install & build
      - name: Build frontend
        run: |
          if [ -d "client" ]; then
            cd client
            npm install
            npm run build
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: build   # only run if build succeeds
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "./"
          target: ${{ secrets.EC2_PATH }}

      - name: Restart app on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd ${{ secrets.EC2_PATH }}

            # ===========================
            # Install dependencies (server)
            # ===========================
            if [ -d "server" ]; then
              cd server
              if [ -f "package-lock.json" ]; then
                npm ci --omit=dev
              else
                npm install --omit=dev
              fi
              cd ..
            fi

            # ===========================
            # Install dependencies (client)
            # ===========================
            if [ -d "client" ]; then
              cd client
              if [ -f "package-lock.json" ]; then
                npm ci --omit=dev
              else
                npm install --omit=dev
              fi
              npm run build
              cd ..
            fi

            # ===========================
            # Restart backend with PM2
            # ===========================
            if pm2 describe myapp > /dev/null; then
              pm2 restart myapp
            else
              pm2 start server/server.js --name myapp
            fi

            # ===========================
            # Serve frontend build with PM2
            # ===========================
            if pm2 describe todo-client > /dev/null; then
              pm2 restart todo-client
            else
              pm2 start "npx serve -s client/build -l 3000" --name todo-client
            fi

            pm2 save
